buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.cooper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions // task 가 실행될 때, 클래스 경로를 추가된다.
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //query dsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    //web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //validator
    implementation 'org.hibernate.validator:hibernate-validator'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //flyway
    implementation 'org.flywaydb:flyway-core:9.21.0'
    implementation 'org.flywaydb:flyway-mysql:9.21.0'

    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    //time-based-uuid
    implementation 'com.github.f4b6a3:uuid-creator:5.3.3'

    // rest assured
    testImplementation 'io.rest-assured:rest-assured:3.3.0'

    // spring rest docs
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// spring rest docs
ext {
    snippetsDir = file("$buildDir/generated-snippets")
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    baseDirFollowsSourceFile() // include 연산 동작시, base directory 를 SourceFile 을 따르도록 하는 명령어
    inputs.dir snippetsDir
    dependsOn test
}
